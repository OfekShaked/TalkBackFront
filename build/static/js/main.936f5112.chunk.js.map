{"version":3,"sources":["configs/config.ts","context/socketContext.tsx","components/page-layout/PageLayoutStyle.tsx","components/header/HeaderStyles.tsx","components/hamburger-menu/HamburgerStyle.tsx","components/hamburger-menu/HamburgerMenu.tsx","components/header/Header.tsx","views/sign-up/SignUpStyle.tsx","hooks/useInput.tsx","services/errorHandling.service.tsx","services/auth.service.tsx","views/sign-up/SignUp.tsx","views/log-in/LoginStyle.tsx","views/log-in/Login.tsx","components/log-out/Logout.tsx","views/contact-screen/GridColDef.tsx","components/contact-actions/ContactDialog.tsx","components/messages/message/Message.tsx","components/AlwaysScrollToBottom.tsx","components/messages/Messages.tsx","components/input/Input.tsx","components/modal/ModalPopup.tsx","components/conversation/bar/Bar.tsx","components/conversation/Conversation.tsx","hooks/useOpenConversation.tsx","hooks/useOpenBoard.tsx","components/board/board-piece/BoardPiece.tsx","components/board/board-pieces/BoardPieces.tsx","components/board/dialogs/GameAlertDialog.tsx","components/board/Board.tsx","components/game-dialog/GameDialog.tsx","components/message-notification/MessageNotification.tsx","views/contact-screen/ContactScreen.tsx","views/website-down/WebsiteDown.tsx","components/page-layout/PageLayout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["config","apiUrl","SOCKET_URL","socket","io","transports","SocketContext","React","createContext","useStyles","makeStyles","theme","root","display","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","appBar","appBarShift","width","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","HamburgerMenu","props","useTheme","classes","Drawer","className","variant","anchor","open","paper","IconButton","onClick","handleDrawerClose","direction","ChevronLeft","ChevronRight","Divider","List","isLoggedIn","ListItem","button","component","NavLink","to","ListItemIcon","Launch","ListItemText","primary","ExitToApp","AccountCircle","Add","Header","AppBar","position","clsx","Toolbar","color","handleDrawerOpen","edge","Menu","Typography","noWrap","marginTop","flexDirection","avatar","margin","backgroundColor","palette","secondary","main","form","submit","useInput","initalValue","useState","value","setValue","onChange","e","target","handleError","error","a","axios","post","stack","console","log","login","userData","setCredentialError","res","status","localStorage","setItem","data","token","username","message","register","setUsernameError","logout","removeItem","getCurrentUser","getItem","isAuthorized","dataToSend","authorization","response","SignUp","history","useHistory","password","usernameError","onSubmit","preventDefault","push","Container","maxWidth","CssBaseline","Avatar","method","noValidate","Grid","container","item","xs","TextField","required","fullWidth","id","label","name","autoComplete","helperText","type","Button","Login","useContext","usernameRecieved","credentialError","emit","setIsLoggedIn","Logout","useEffect","waitLogout","GridColDefs","columns","field","headerName","editable","headerAlign","align","disableColumnMenu","disableReorder","renderCell","params","row","handleClick","ContactDialog","handleClose","anchorEl","isSelecterUserConnected","handleListItemClick","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","autoFocus","ListItemAvatar","Send","SportsEsports","Message","isSentByCurrentUser","trimmedName","trim","toLowerCase","sender","text","user","AlwaysScrollToBottom","elementRef","useRef","node","current","scrollIntoView","ref","Messages","messages","map","i","Input","setMessage","sendMessage","placeholder","onKeyPress","event","key","ModalPopup","Modal","children","Bar","recieverUsername","Conversation","senderUsername","setMessages","on","currentState","activateSocket","err","useOpenConversation","openConversation","setOpenConversation","handleConversationOpen","handleConversationClose","useOpenBoard","openBoard","setOpenBoard","boardPlayers","setBoardPlayers","handleBoardOpen","handleBoardClose","BoardPiece","isDead","isOptional","keyValue","topOrBottom","setTopOrBottom","column","setColumn","handleColumn","columnNum","Fragment","draggable","BoardPieces","showOptions","userColor","isOptionalVisible","optionPieces","setOptionPieces","standbyPieces","setStandbyPieces","outPieces","setOutPieces","whiteOut","setWhiteOut","blackOut","setBlackOut","whiteStandby","setWhiteStandby","blackStandby","setBlackStandby","turnsUsed","setTurnsUsed","piecesCount","currentPositions","setCurrentPositions","handlePositionChosen","oldPosition","newPosition","currentTurnsUsed","positions","changeOldPosition","prevState","setNewPosition","boardDataToSend","currentUser","board","handleOptionalPosition","move","prevIsDead","isAllowedToTakePiecesOut","isAbleToTakePiecesOut","Math","abs","getOptionalPositions","dice1","dice2","optionPositions","option1","option2","option3","optionConfig","option4","getOptionalPositionsInner","finishTurn","colorFinished","comparePieces","b","optionals","index","pop","setNumTurnsLeft","splice","sort","length","isOptionalMovesPossible","setGameMessage","setTimeout","setGameAlertDialogType","checkAndHandleUserWin","socketGet","object","positionsToShow","mapPositions","isTurn","GameAlertDialog","titleText","setTitleText","bodyText","setBodyText","gameAlertDialogType","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Board","reactDice1","reactDice2","setUserColor","setIsOptionalVisible","isGameStarted","setIsGameStarted","openGameAlertDialog","setOpenGameAlertDialog","setIsTurn","isDiceRolled","setIsDiceRolled","numTurnsLeft","gameMessage","isRollDisabled","setIsRollDisabled","currentUserColor","setCurrentUserColor","rollDoneCallback","num","setTurn","assignedUserColor","startColor","currentTurnColor","Close","rollAll","disabled","Badge","badgeContent","Games","numDice","rollDone","dice","disableIndividual","dieSize","faceColor","dotColor","state","totalValue","CircularProgress","GameDialog","player","Alert","elevation","MessageNotification","notificationOpen","onNotificationClose","notificationMessage","setNotificationMessage","slice","changeMessage","audio","Audio","load","muted","play","then","catch","Snackbar","autoHideDuration","severity","ContactScreen","selectedUsername","setSelectedUsername","setIsSelecterUserConnected","setAnchorEl","onlineUsers","setOnlineUsers","offlineUsers","setOfflineUsers","openGameDialog","setOpenGameDialog","playerAsking","setPlayerAsking","openMessageNotification","setOpenMessageNotification","senderName","setSenderName","messageText","setMessageText","handleRowSelection","dialogOpen","Boolean","undefined","currentTarget","users","userRows","onlines","filter","offlineUserRows","offlines","messsageData","socketSend","rows","pageSize","rowsPerPageOptions","autoHeight","disableExtendRowFullWidth","onRowClick","reason","WebsiteDown","PageLayout","currentPage","setCurrentPage","setOpen","isServerOnline","setIsServerOnline","getAuth","connected","path","render","exact","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.936f5112.chunk.js","sourcesContent":["\r\nconst config = {\r\n    apiUrl:'https://whats-on-your-app.azurewebsites.net/'\r\n}\r\nexport default config;","import {io} from \"socket.io-client\";\r\nimport React from 'react';\r\nimport config from '../configs/config';\r\nconst SOCKET_URL = config.apiUrl;\r\n\r\nexport const socket = io(SOCKET_URL, { transports: ['websocket', 'polling', 'flashsocket'] });\r\nexport const SocketContext = React.createContext<any>(null);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n    export default useStyles;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n      },\r\n      appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      }\r\n    }));\r\n    export default useStyles;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      drawerPaper: {\r\n        width: drawerWidth,\r\n      },\r\n      drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n      }\r\n    }));\r\n    export default useStyles;","import React from 'react';\r\nimport { Drawer, IconButton, Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { ChevronLeft, ChevronRight, AccountCircle, Add, Launch, ExitToApp } from '@material-ui/icons';\r\nimport useStyles from './HamburgerStyle';\r\nimport { useTheme } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface IHamburgerMenuProps {\r\n  open: any;\r\n  handleDrawerClose: any;\r\n  isLoggedIn: boolean;\r\n}\r\n\r\nconst HamburgerMenu = (props: IHamburgerMenuProps) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles(theme);\r\n\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"persistent\"\r\n      anchor=\"left\"\r\n      open={props.open}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        <IconButton onClick={props.handleDrawerClose}>\r\n          {theme.direction === 'ltr' ? <ChevronLeft /> : <ChevronRight />}\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {!props.isLoggedIn ? (\r\n          <>\r\n            <ListItem button\r\n              key=\"Sign-In\"\r\n              component={NavLink} to=\"/signin\">\r\n              <ListItemIcon><AccountCircle></AccountCircle></ListItemIcon>\r\n              <ListItemText primary=\"Sign-In\"></ListItemText>\r\n            </ListItem>\r\n            <ListItem button\r\n              key=\"Register\"\r\n              component={NavLink} to=\"/register\">\r\n              <ListItemIcon><Add></Add></ListItemIcon>\r\n              <ListItemText primary=\"Register\"></ListItemText>\r\n            </ListItem>\r\n          </>) : <>\r\n          <ListItem button\r\n            key=\"Open\"\r\n            component={NavLink} to=\"/contact\">\r\n            <ListItemIcon><Launch></Launch></ListItemIcon>\r\n            <ListItemText primary=\"Open\"></ListItemText>\r\n          </ListItem><ListItem button\r\n            key=\"Logout\"\r\n            component={NavLink} to=\"/Logout\">\r\n            <ListItemIcon><ExitToApp></ExitToApp></ListItemIcon>\r\n            <ListItemText primary=\"Logout\"></ListItemText>\r\n          </ListItem></>}\r\n\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\nexport default HamburgerMenu;","import React from 'react';\r\nimport { AppBar, IconButton, Typography, Toolbar } from '@material-ui/core';\r\nimport { Menu } from '@material-ui/icons';\r\nimport useStyles from './HeaderStyles';\r\nimport clsx from 'clsx';\r\nimport HamburgerMenu from '../hamburger-menu/HamburgerMenu';\r\nimport { useTheme } from '@material-ui/core';\r\n\r\ninterface IHeaderProps {\r\n  open: boolean;\r\n  handleDrawerOpen: any;\r\n  handleDrawerClose: any;\r\n  isLoggedIn: boolean;\r\n}\r\n\r\nconst Header = (props: any) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles(theme);\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: props.open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={props.handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, props.open && classes.hide)}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            What's On My App\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <HamburgerMenu open={props.open} handleDrawerClose={props.handleDrawerClose} isLoggedIn={props.isLoggedIn}></HamburgerMenu>\r\n    </>\r\n  );\r\n}\r\nexport default Header;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\n  export default useStyles;","import { useState } from \"react\";\r\n\r\n\r\nconst useInput = (initalValue:any) => {\r\n    const [value, setValue] = useState(initalValue || '');\r\n\r\n    const onChange = (e:any) => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    return {\r\n        value,\r\n        onChange\r\n    }\r\n}\r\n\r\nexport default useInput;","import axios from 'axios'\r\nimport config from '../configs/config';\r\n\r\nexport const handleError = async(error:any) =>{\r\n    try{\r\n        await axios.post(`${config.apiUrl}/errors/add`, {error:error.stack})\r\n    }catch(err){\r\n        console.log(error.stack);\r\n        console.log(err);\r\n    }\r\n}","import axios from 'axios'\r\nimport config from '../configs/config';\r\nimport { handleError } from './errorHandling.service';\r\n\r\nexport const login = async (userData: any, setCredentialError: any): Promise<Boolean> => {\r\n    try {\r\n        const res = await axios.post(`${config.apiUrl}/account/login`, userData)\r\n        if (res.status === 200) {\r\n            localStorage.setItem('token', res.data.token);\r\n            localStorage.setItem('username', userData.username);\r\n            return true;\r\n        } else {\r\n            setCredentialError(res.data.message);\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        setCredentialError('There was an error! please try again!');\r\n        handleError(error);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const register = async (userData: Object, setUsernameError: any) => {\r\n    try {\r\n        const res = await axios.post(`${config.apiUrl}/account/register`, userData)\r\n        if (res.status === 200) {\r\n            return true;\r\n        } else {\r\n            setUsernameError(res.data);\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        setUsernameError('There was an error! please try again!');\r\n        handleError(error);\r\n        return false;\r\n    }\r\n};\r\nexport const logout = () => {\r\n    try {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"username\");\r\n    } catch (error) {\r\n        handleError(error)\r\n    }\r\n};\r\nexport const getCurrentUser = (): String => {\r\n    try {\r\n        const username = localStorage.getItem('username');\r\n        return username ? username : \"\";\r\n    } catch (error) {\r\n        handleError(error)\r\n        return \"\";\r\n    }\r\n};\r\n\r\nexport const isAuthorized = async (): Promise<Boolean> => {\r\n    try {\r\n        const dataToSend = {\r\n            authorization: localStorage.getItem('token')\r\n        }\r\n        const response = await axios.post(`${config.apiUrl}/account/isconnected`, dataToSend)\r\n        console.log(response);\r\n        \r\n        if (response.status === 200) {\r\n            localStorage.setItem('token', response.data.token);\r\n            localStorage.setItem('username', response.data.username);\r\n            return true;\r\n        } else {\r\n            logout();\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        handleError(error)\r\n        return false;\r\n\r\n    };\r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport useStyles from './SignUpStyle';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useInput from '../../hooks/useInput';\r\nimport {register} from '../../services/auth.service';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { handleError } from '../../services/errorHandling.service';\r\n\r\nconst SignUp = () => {\r\n    const theme = useTheme();\r\n    const classes = useStyles(theme);\r\n\r\n    const history = useHistory();\r\n    const username = useInput('');\r\n    const password = useInput('');\r\n    const [usernameError,setUsernameError] = useState(\"\")\r\n\r\n    const onSubmit = async (e:any) => {\r\n        try{\r\n        e.preventDefault();\r\n        const userData:object = { \"username\":username.value, \"password\":password.value};\r\n        if(await register(userData,setUsernameError)){\r\n            history.push(\"/signin\")\r\n        }\r\n    }catch(error){\r\n        handleError(error)\r\n    }\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} method=\"post\" onSubmit={onSubmit} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                autoComplete=\"string\"\r\n                                {...username}\r\n                                error={usernameError!==\"\"}\r\n                                helperText={usernameError}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                {...password}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SignUp;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\n  export default useStyles;","import React,{useState,useContext} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport useStyles from './LoginStyle';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useInput from '../../hooks/useInput';\r\nimport {login} from '../../services/auth.service'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {SocketContext} from '../../context/socketContext';\r\nimport {handleError} from '../../services/errorHandling.service';\r\n\r\nconst Login = (props:any) => {\r\n    const socket = useContext(SocketContext);\r\n    const theme = useTheme();\r\n    const classes = useStyles(theme);\r\n    const history = useHistory();\r\n\r\n    const usernameRecieved = useInput('');\r\n    const password = useInput('');\r\n    const [credentialError,setCredentialError] = useState(\"\")\r\n\r\n    const onSubmit = async (e:any) => {\r\n        try{\r\n        e.preventDefault();\r\n        const userData:any = { \"username\":usernameRecieved.value, \"password\":password.value};        \r\n        if(await login(userData,setCredentialError)){\r\n            await socket.emit(\"user_online\",userData.username);\r\n            props.setIsLoggedIn(true);\r\n            history.push(\"/contact\")\r\n        }\r\n    }catch(error){\r\n        handleError(error)\r\n    }\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign In\r\n                </Typography>\r\n                <form className={classes.form} method=\"post\" onSubmit={onSubmit} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                autoComplete=\"string\"\r\n                                {...usernameRecieved}\r\n                                error={credentialError!==\"\"}\r\n                                helperText={credentialError}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                {...password}\r\n                                error={credentialError!==\"\"}\r\n                                helperText={credentialError}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Log In\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useEffect, useContext } from 'react'\r\nimport { logout } from '../../services/auth.service'\r\nimport { SocketContext } from '../../context/socketContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Logout = (props: any) => {\r\n\r\n    const socket = useContext(SocketContext);\r\n\r\n    useEffect(() => {\r\n        const waitLogout = async () => {\r\n            await logout()\r\n            await socket.emit(\"logout\");\r\n            props.setIsLoggedIn(false);\r\n        }\r\n        waitLogout();\r\n    }, [])\r\n\r\n    return (<Redirect to=\"/\" />)\r\n}\r\nexport default Logout;","import { DataGrid, GridColDef } from '@material-ui/data-grid';\r\nimport { Avatar, Button } from '@material-ui/core';\r\nimport {List} from '@material-ui/icons'\r\nconst GridColDefs = (props: any)=>{\r\n\r\nconst columns: GridColDef[] = [\r\n    {\r\n        field: 'username',\r\n        headerName: 'User Name',\r\n        width: 150,\r\n        editable: false,\r\n        headerAlign: 'center',\r\n        align: 'center'\r\n    },\r\n    {\r\n        field: 'status',\r\n        headerName: 'Status',\r\n        width: 150,\r\n        editable: false,\r\n        headerAlign: 'center',\r\n        align: 'center',\r\n        disableColumnMenu: true,\r\n        disableReorder: true,\r\n        renderCell: (params) => {\r\n            return (<>\r\n                <Avatar className={params.row.status}> </Avatar>\r\n            </>\r\n\r\n            );\r\n        }\r\n    },\r\n    {\r\n        field: 'actions',\r\n        headerName: 'Actions',\r\n        width: 150,\r\n        editable: false,\r\n        headerAlign: 'center',\r\n        align: 'center',\r\n        disableColumnMenu: true,\r\n        disableReorder: true,\r\n        renderCell: (params) => {\r\n            return (<>\r\n                <Button aria-describedby={params.row.username} variant=\"contained\" color=\"primary\" onClick={props.handleClick}>\r\n                    <List />\r\n                </Button>\r\n            </>\r\n\r\n            );\r\n        }\r\n    }\r\n];\r\nreturn {columns}\r\n}\r\n\r\nexport default GridColDefs;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { Send, SportsEsports } from '@material-ui/icons'\r\n\r\ninterface IContactDialogProps{\r\n  open:boolean;\r\n  handleClose:any;\r\n  id:any;\r\n  anchorEl:any;\r\n  isSelecterUserConnected:any;\r\n}\r\n\r\nconst ContactDialog = (props: IContactDialogProps) => {\r\n  const { open, handleClose, id , anchorEl,isSelecterUserConnected} = props;\r\n\r\n  const handleListItemClick = (value: string) => {\r\n    handleClose(value);\r\n  };\r\n\r\n  return (\r\n    <Popover\r\n      id={id}\r\n      open={open}\r\n      anchorEl={anchorEl}\r\n      onClose={handleListItemClick}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}>\r\n      <List>\r\n        <ListItem autoFocus button onClick={() => handleListItemClick('sendMessage')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <Send />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Send Message\" />\r\n        </ListItem>\r\n        {isSelecterUserConnected?\r\n        <ListItem autoFocus button onClick={() => handleListItemClick('play')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <SportsEsports />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Play\" />\r\n        </ListItem>\r\n        :<></>}\r\n      </List>\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default ContactDialog;","import React from 'react';\r\n\r\nimport './MessageStyle.scss';\r\n\r\ninterface IMessageProps {\r\n  name: String;\r\n  message: any;\r\n}\r\n\r\nconst Message = (props: IMessageProps) => {\r\n  let isSentByCurrentUser = false;\r\n  const { name, message } = props;\r\n\r\n  const trimmedName = name.trim().toLowerCase();\r\n\r\n  if (message.sender === trimmedName) {\r\n    isSentByCurrentUser = true;\r\n  }\r\n\r\n  return (\r\n    isSentByCurrentUser\r\n      ? (\r\n        <div className=\"messageContainer justifyEnd\">\r\n          <p className=\"sentText pr-10\">{trimmedName}</p>\r\n          <div className=\"messageBox backgroundBlue\">\r\n            <p className=\"messageText colorWhite\">{message.text}</p>\r\n          </div>\r\n        </div>\r\n      )\r\n      : (\r\n        <div className=\"messageContainer justifyStart\">\r\n          <div className=\"messageBox backgroundLight\">\r\n            <p className=\"messageText colorDark\">{message.text}</p>\r\n          </div>\r\n          <p className=\"sentText pl-10 \">{message.user}</p>\r\n        </div>\r\n      )\r\n  );\r\n}\r\n\r\nexport default Message;","import React, { useEffect, useRef } from 'react'\r\nimport { handleError } from '../services/errorHandling.service';\r\n\r\nconst AlwaysScrollToBottom = () => {\r\n  const elementRef = useRef<HTMLDivElement>(null)\r\n  useEffect(() => {\r\n    try {\r\n      const node = elementRef.current;\r\n      node?.scrollIntoView()\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n\r\n  });\r\n  return <div ref={elementRef} />;\r\n};\r\n\r\nexport default AlwaysScrollToBottom;\r\n\r\n","import Message from './message/Message';\r\n\r\nimport './MessagesStyle.scss';\r\n\r\nimport AlwaysScrollToBottom from '../AlwaysScrollToBottom';\r\n\r\ninterface IMessages {\r\n  messages: any,\r\n  name: String;\r\n}\r\n\r\nconst Messages = (props: IMessages) => {\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      {props.messages.map((message: any, i: any) => <div key={i}><Message message={message} name={props.name} /></div>)}\r\n      <AlwaysScrollToBottom />\r\n    </div>)\r\n};\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport './InputStyle.scss';\r\n\r\ninterface IInput {\r\n    setMessage: any;\r\n    sendMessage: any;\r\n    message: any;\r\n}\r\nconst Input = (props: IInput) => {\r\n    const { setMessage, sendMessage, message } = props;\r\n    return (\r\n        <form className=\"form\">\r\n            <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Type a message...\"\r\n                value={message}\r\n                onChange={({ target: { value } }) => setMessage(value)}\r\n                onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\r\n            />\r\n            <Button className=\"sendButton\" onClick={e => sendMessage(e)}>Send</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal'\r\n\r\ninterface IModalPopupProps {\r\n    open: boolean;\r\n    handleClose?: any;\r\n    children: any;\r\n}\r\n\r\nconst ModalPopup = (props: IModalPopupProps) => {\r\n    const { open, handleClose } = props;\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {props.children}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default ModalPopup;","import React from 'react';\r\nimport './BarStyle.scss';\r\n\r\nconst Bar = (props: any) => (\r\n  <div className=\"infoBar\">\r\n    <div className=\"leftInnerContainer\">\r\n      <h3>{props.recieverUsername}</h3>\r\n    </div>\r\n    <div className=\"rightInnerContainer\">\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Bar;","import React, { useState, useContext, useEffect } from 'react';\r\nimport Messages from '../messages/Messages';\r\nimport Input from '../input/Input';\r\nimport { SocketContext } from '../../context/socketContext';\r\nimport ModalPopup from '../modal/ModalPopup';\r\nimport Bar from './bar/Bar';\r\nimport './ConversationStyle.scss';\r\nimport { handleError } from '../../services/errorHandling.service'\r\n\r\ninterface ConversationProps {\r\n    senderUsername: String;\r\n    recieverUsername: String;\r\n    open: any;\r\n    handleClose: any;\r\n}\r\n\r\nconst Conversation = (props: ConversationProps) => {\r\n\r\n    const { recieverUsername, senderUsername, open, handleClose } = props;\r\n    const socket = useContext(SocketContext)\r\n    const [name, setName] = useState(senderUsername);\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState<any>([]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const activateSocket = async () => {\r\n                socket.on(\"getMessages\", (messages: any) => {\r\n                    setMessages(messages);\r\n                })\r\n                socket.on(\"getNewMessage\", (message: any) => {\r\n                    setMessages((currentState: any) => [...currentState, message]);\r\n                })\r\n            }\r\n            activateSocket();\r\n        } catch (err) {\r\n            handleError(err);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const activateSocket = async () => {\r\n                socket.emit(\"conv_joined\", { senderUsername, recieverUsername })\r\n            }\r\n            activateSocket();\r\n        } catch (err) {\r\n            handleError(err);\r\n        }\r\n    }, [recieverUsername])\r\n\r\n    const sendMessage = (event: any) => {\r\n        try {\r\n            event.preventDefault();\r\n            if (message) {\r\n                socket.emit(\"sendMessage\", { senderUsername, recieverUsername, message });\r\n                setMessages((currentState: any) => [...currentState, { text: message, sender: senderUsername }]);\r\n                setMessage('');\r\n            }\r\n        } catch (error) {\r\n            handleError(error);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <ModalPopup open={open} handleClose={handleClose}>\r\n            <div className=\"container\">\r\n                <Bar recieverUsername={recieverUsername} />\r\n                <Messages messages={messages} name={name} />\r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n            </div>\r\n        </ModalPopup>\r\n    )\r\n}\r\n\r\nexport default Conversation;","import React, { useState } from 'react';\r\n\r\nconst useOpenConversation = () => {\r\n  const [openConversation, setOpenConversation] = useState<Boolean>(false);\r\n\r\n  const handleConversationOpen = (): void => {\r\n    setOpenConversation(true);\r\n  };\r\n\r\n  const handleConversationClose = (): void => {\r\n    setOpenConversation(false);\r\n  };\r\n\r\n  return {\r\n    openConversation,\r\n    handleConversationOpen,\r\n    handleConversationClose,\r\n  }\r\n}\r\nexport default useOpenConversation;","import React, { useState,useContext } from 'react';\r\nimport {SocketContext} from '../context/socketContext';\r\n\r\nconst useOpenBoard = () => {\r\n  const [openBoard, setOpenBoard] = useState<Boolean>(false);\r\n  const socket = useContext(SocketContext);\r\n  const [boardPlayers,setBoardPlayers] = useState({senderUsername:\"\", recieverUsername:\"\"})\r\n\r\n  const handleBoardOpen = (senderUsername:any,recieverUsername:any): void => {\r\n    setBoardPlayers({senderUsername:senderUsername,recieverUsername:recieverUsername})\r\n    setOpenBoard(true);\r\n    socket.emit(\"joinGame\",{ senderUsername, recieverUsername})\r\n  };\r\n\r\n  const handleBoardClose = (): void => {\r\n    setOpenBoard(false);\r\n    socket.emit(\"leaveGame\",{ ...boardPlayers})\r\n\r\n  };\r\n\r\n  return {\r\n    openBoard,\r\n    handleBoardOpen,\r\n    handleBoardClose,\r\n  }\r\n}\r\nexport default useOpenBoard;","import React, { useState, useEffect } from 'react';\r\nimport { handleError } from '../../../services/errorHandling.service'\r\ninterface BoardPieceProps {\r\n    color: String;\r\n    position: number;\r\n    isDead: Boolean;\r\n    row: number;\r\n    onClick: any | null;\r\n    isOptional: Boolean;\r\n    children?: JSX.Element;\r\n    keyValue: any;\r\n}\r\n\r\nconst BoardPiece = (props: BoardPieceProps) => {\r\n    const { color, position, isDead, row, isOptional, keyValue } = props;\r\n    //position can be 0-25 where 0 and 25 is outside(eaten)\r\n    const [topOrBottom, setTopOrBottom] = useState<String>(\"\");\r\n\r\n    const [column, setColumn] = useState<number>();\r\n\r\n    useEffect(() => {\r\n        handleColumn();\r\n    }, [position])\r\n\r\n\r\n    const handleColumn = (): void => {\r\n        try {\r\n            setTopOrBottom(position > 12 ? \"top\" : \"bottom\");\r\n            if (position > 12) {\r\n                let columnNum: number;\r\n                switch (position) {\r\n                    case 13: columnNum = 12; break;\r\n                    case 14: columnNum = 11; break;\r\n                    case 15: columnNum = 10; break;\r\n                    case 16: columnNum = 9; break;\r\n                    case 17: columnNum = 8; break;\r\n                    case 18: columnNum = 7; break;\r\n                    case 19: columnNum = 6; break;\r\n                    case 20: columnNum = 5; break;\r\n                    case 21: columnNum = 4; break;\r\n                    case 22: columnNum = 3; break;\r\n                    case 23: columnNum = 2; break;\r\n                    case 24: columnNum = 1; break;\r\n                    default: columnNum = 0; break;\r\n\r\n                }\r\n                if (position <= 0) {\r\n                    columnNum = 0;\r\n                }\r\n                setColumn(columnNum);\r\n            }\r\n            else {\r\n                setColumn(position);\r\n            }\r\n        } catch (error) {\r\n            handleError(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment key={keyValue}>\r\n            {!isDead ?\r\n                <div className={`piece_${color} ${topOrBottom}_row_${row} column_${column} ${isOptional ? \"optional\" : \"\"} ${props.onClick ? \"canBeMoved\" : \"\"}`} draggable=\"true\" onClick={props.onClick}>\r\n                    {props.children}\r\n                </div>\r\n                : <></>}\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default BoardPiece;","import React, { useEffect, useState, useContext } from 'react';\r\nimport BoardPiece from '../board-piece/BoardPiece';\r\nimport { SocketContext } from '../../../context/socketContext';\r\nimport { getCurrentUser } from '../../../services/auth.service';\r\nimport { handleError } from '../../../services/errorHandling.service';\r\n\r\n\r\ninterface IBoardPiecesProps {\r\n    showOptions: any;\r\n    userColor: any;\r\n    isOptionalVisible: any;\r\n    setGameMessage: any;\r\n    setNumTurnsLeft: any;\r\n    isTurn: any;\r\n    setGameAlertDialogType: any;\r\n}\r\n\r\ninterface IPosition {\r\n    piecesCount: number,\r\n    color: String\r\n}\r\n\r\n\r\nconst BoardPieces = (props: IBoardPiecesProps) => {\r\n    const socket = useContext(SocketContext);\r\n    const { showOptions, userColor, isOptionalVisible } = props;\r\n\r\n    //pieces eaten, pieces taken out and optional moves\r\n    const [optionPieces, setOptionPieces] = useState<any>([])\r\n    const [standbyPieces, setStandbyPieces] = useState<any>([]);\r\n    const [outPieces, setOutPieces] = useState<any>([]);\r\n\r\n    //pieces taken out from board\r\n    const [whiteOut, setWhiteOut] = useState(0);\r\n    const [blackOut, setBlackOut] = useState(0);\r\n    //pieces eaten\r\n    const [whiteStandby, setWhiteStandby] = useState(0);\r\n    const [blackStandby, setBlackStandby] = useState(0);\r\n    const [turnsUsed, setTurnsUsed] = useState(0);\r\n\r\n\r\n    const positions: Array<IPosition> = [\r\n        { piecesCount: 2, color: \"white\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 5, color: \"black\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 3, color: \"black\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 5, color: \"white\" },\r\n        { piecesCount: 5, color: \"black\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 3, color: \"white\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 5, color: \"white\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 0, color: \"\" },\r\n        { piecesCount: 2, color: \"black\" },\r\n    ]\r\n    const [currentPositions, setCurrentPositions] = useState(positions);\r\n\r\n\r\n    //map the pieces on the board\r\n    const mapPositions = (position: IPosition, index: number) => {\r\n        try {\r\n            let positionsToShow = []\r\n\r\n            if (position.piecesCount !== 0) {\r\n                for (let i = 1; i <= position.piecesCount; i++) {\r\n                    if (i === 5 && position.piecesCount > 5) {\r\n                        positionsToShow.push(<BoardPiece keyValue={positionsToShow.length + 1} position={index + 1} row={i} color={position.color} isDead={false} onClick={userColor === position.color ? () => showOptions(index + 1) : null} isOptional={false}>\r\n                            <span className=\"aboveFive\">{position.piecesCount - i + 1}</span>\r\n                        </BoardPiece>);\r\n                        break;\r\n                    }\r\n                    positionsToShow.push(<BoardPiece keyValue={positionsToShow.length + 1} position={index + 1} row={i} color={position.color} isDead={false} onClick={i === position.piecesCount && userColor === position.color ? () => showOptions(index + 1) : null} isOptional={false} />);\r\n                }\r\n            }\r\n            return positionsToShow;\r\n        } catch (error) {\r\n            handleError(error);\r\n            return [];\r\n        }\r\n    }\r\n    //handles the click on an optional move of a piece\r\n    const handlePositionChosen = (oldPosition: number, newPosition: number, color: String, currentTurnsUsed: number) => {\r\n        try {\r\n            changeOldPosition(currentPositions, oldPosition, setWhiteStandby, setBlackStandby, whiteStandby, blackStandby, setCurrentPositions);\r\n            setNewPosition(newPosition, setWhiteOut, setBlackOut, currentPositions, color, setWhiteStandby, setBlackStandby, setCurrentPositions);\r\n            setTurnsUsed(turnsUsed + currentTurnsUsed)\r\n            const boardDataToSend = {\r\n                positions: currentPositions,\r\n                whiteOut: whiteOut,\r\n                blackOut: blackOut,\r\n                whiteStandby: whiteStandby,\r\n                blackStandby: blackStandby\r\n            }\r\n            const currentUser = getCurrentUser();\r\n            socket.emit(\"sendBoard\", { board: boardDataToSend, senderUsername: currentUser });\r\n        } catch (error) {\r\n            handleError(error);\r\n        }\r\n    }\r\n    //checks if all the pieces of the same color are in the last quarter\r\n    const isAbleToTakePiecesOut = (color: String): Boolean => {\r\n        try {\r\n            if (color === \"white\") {\r\n                if (whiteStandby !== 0) return false;\r\n                for (let i = 18; i > 0; i--) {\r\n                    if (currentPositions[i - 1].color === \"white\") return false;\r\n                }\r\n            }\r\n            else {\r\n                if (blackStandby !== 0) return false;\r\n                for (let i = 7; i <= 24; i++) {\r\n                    if (currentPositions[i - 1].color === \"black\") return false;\r\n                }\r\n            }\r\n            return true;\r\n        } catch (error) {\r\n            handleError(error);\r\n            return false;\r\n        }\r\n    }\r\n    //set the optional moves of a position on the board \r\n    const handleOptionalPosition = (position: number, move: number, color: String, currentTurnsUsed: number, prevIsDead: Boolean) => {\r\n        try {\r\n            let positionConfig;\r\n            const isAllowedToTakePiecesOut = isAbleToTakePiecesOut(color);\r\n            if (position + move > 24) {\r\n                positionConfig = {\r\n                    position: 25,\r\n                    row: 1,\r\n                    onClick: () => handlePositionChosen(position, position + move, color, currentTurnsUsed),\r\n                    isDead: !isAllowedToTakePiecesOut || prevIsDead\r\n                }\r\n            } else if (position + move < 1) {\r\n                positionConfig = {\r\n                    position: 0,\r\n                    row: 1,\r\n                    onClick: () => handlePositionChosen(position, position + move, color, currentTurnsUsed),\r\n                    isDead: !isAllowedToTakePiecesOut || prevIsDead\r\n                }\r\n            } else if (position === 0 || position === 25) {\r\n                positionConfig = {\r\n                    position: position + move,\r\n                    row: (currentPositions[position + move - 1].piecesCount + 1) > 5 ? 5 : (currentPositions[position + move - 1].piecesCount + 1),\r\n                    onClick: () => handlePositionChosen(position, position + move, color, currentTurnsUsed),\r\n                    isDead: !(currentPositions[position + move - 1].color === color || currentPositions[position + move - 1].color === \"\" || currentPositions[position + move - 1].piecesCount <= 1) || !(Math.abs(move) <= 6) || prevIsDead\r\n                }\r\n            }\r\n            else {\r\n                positionConfig = {\r\n                    position: position + move,\r\n                    row: (currentPositions[position + move - 1].piecesCount + 1) > 5 ? 5 : (currentPositions[position + move - 1].piecesCount + 1),\r\n                    onClick: () => handlePositionChosen(position, position + move, color, currentTurnsUsed),\r\n                    isDead: !(currentPositions[position + move - 1].color === color || currentPositions[position + move - 1].color === \"\" || currentPositions[position + move - 1].piecesCount <= 1) || prevIsDead\r\n                }\r\n            }\r\n            return positionConfig;\r\n        } catch (error) {\r\n            handleError(error);\r\n            return {\r\n                position: position + move,\r\n                row: (currentPositions[position + move - 1].piecesCount + 1) > 5 ? 5 : (currentPositions[position + move - 1].piecesCount + 1),\r\n                onClick: () => handlePositionChosen(position, position + move, color, currentTurnsUsed),\r\n                isDead: !(currentPositions[position + move - 1].color === color || currentPositions[position + move - 1].color === \"\" || currentPositions[position + move - 1].piecesCount <= 1) || prevIsDead\r\n            }\r\n        }\r\n    }\r\n    //return all the options for a move of a piece\r\n    const getOptionalPositionsInner = (position: number, dice1: number, dice2: number) => {\r\n        try {\r\n            let optionConfig = { color: userColor, isOptional: true }\r\n            let option1, option2, option3, option4;\r\n            if (userColor === \"white\") {\r\n                if (dice1 !== dice2) {\r\n                    option1 = { ...handleOptionalPosition(position, dice1, \"white\", 1, false), ...optionConfig }\r\n                    option2 = { ...handleOptionalPosition(position, dice2, \"white\", 2, false), ...optionConfig }\r\n                    option3 = { ...handleOptionalPosition(position, dice1 + dice2, \"white\", 3, option1.isDead && option2.isDead), ...optionConfig }\r\n                    return { option1: option1, option2: option2, option3: option3 }\r\n                } else {\r\n                    option1 = { ...handleOptionalPosition(position, dice1, \"white\", 1, false), ...optionConfig }\r\n                    option2 = { ...handleOptionalPosition(position, dice1 * 2, \"white\", 2, option1.isDead), ...optionConfig }\r\n                    option3 = { ...handleOptionalPosition(position, dice1 * 3, \"white\", 3, option2.isDead), ...optionConfig }\r\n                    option4 = { ...handleOptionalPosition(position, dice1 * 4, \"white\", 4, option3.isDead), ...optionConfig }\r\n                    return { option1: option1, option2: option2, option3: option3, option4: option4 }\r\n                }\r\n            }\r\n            else {\r\n                if (dice1 !== dice2) {\r\n                    option1 = { ...handleOptionalPosition(position, 0 - dice1, \"black\", 1, false), ...optionConfig }\r\n                    option2 = { ...handleOptionalPosition(position, 0 - dice2, \"black\", 2, false), ...optionConfig }\r\n                    option3 = { ...handleOptionalPosition(position, 0 - dice1 - dice2, \"black\", 3, option1.isDead && option2.isDead), ...optionConfig }\r\n                    return { option1: option1, option2: option2, option3: option3 }\r\n                } else {\r\n                    option1 = { ...handleOptionalPosition(position, 0 - dice1, \"black\", 1, false), ...optionConfig }\r\n                    option2 = { ...handleOptionalPosition(position, 0 - dice1 * 2, \"black\", 2, option1.isDead), ...optionConfig }\r\n                    option3 = { ...handleOptionalPosition(position, 0 - dice1 * 3, \"black\", 3, option2.isDead), ...optionConfig }\r\n                    option4 = { ...handleOptionalPosition(position, 0 - dice1 * 4, \"black\", 4, option3.isDead), ...optionConfig }\r\n                    return { option1: option1, option2: option2, option3: option3, option4: option4 }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            handleError(error);\r\n            return { option1: { isDead: true, position: 0, color: \"white\", row: 1, isOptional: false, onClick: () => { } }, option2: { isDead: true, position: 0, color: \"white\", row: 1, isOptional: false, onClick: () => { } }, option3: { isDead: true, position: 0, color: \"white\", row: 1, isOptional: false, onClick: () => { } }, option4: { isDead: true, position: 0, color: \"white\", row: 1, isOptional: false, onClick: () => { } } }\r\n        }\r\n    }\r\n    //fixed positions and show dead ones\r\n    const getOptionalPositions = (position: number, dice1: number, dice2: number) => {\r\n        try {\r\n            let optionPositions = getOptionalPositionsInner(position, dice1, dice2);\r\n            if (userColor === \"white\") {\r\n                if (optionPositions.option4) {\r\n                    if (optionPositions.option4.position > 24 && optionPositions.option3.position > 24) optionPositions.option4.isDead = true;\r\n                    if (optionPositions.option3.position > 24 && optionPositions.option2.position > 24) optionPositions.option3.isDead = true;\r\n                    if (optionPositions.option2.position > 24 && optionPositions.option1.position > 24) optionPositions.option2.isDead = true;\r\n                } else {\r\n                    if (optionPositions.option3.position > 24 && optionPositions.option2.position > 24) optionPositions.option3.isDead = true;\r\n                }\r\n            } else {\r\n                if (optionPositions.option4) {\r\n                    if (optionPositions.option4.position < 1 && optionPositions.option3.position < 1) optionPositions.option4.isDead = true;\r\n                    if (optionPositions.option3.position < 1 && optionPositions.option2.position < 1) optionPositions.option3.isDead = true;\r\n                    if (optionPositions.option2.position < 1 && optionPositions.option1.position < 1) optionPositions.option2.isDead = true;\r\n                } else {\r\n                    if (optionPositions.option3.position < 1 && optionPositions.option2.position < 1) optionPositions.option3.isDead = true;\r\n                }\r\n            }\r\n            return optionPositions;\r\n        } catch (error) {\r\n            handleError(error);\r\n            return { option1: { isDead: true, position: 0, color: \"white\", row: 1, isOptional: false, onClick: () => { } }, option2: { isDead: true, position: 0, color: \"white\", row: 1, isOptional: false, onClick: () => { } }, option3: { isDead: true, position: 0, color: \"white\", row: 1, isOptional: false, onClick: () => { } }, option4: { isDead: true, position: 0, color: \"white\", row: 1, isOptional: false, onClick: () => { } } }\r\n        }\r\n    }\r\n    //checks if a user has any moves possible\r\n    const isOptionalMovesPossible = (): Boolean => {\r\n        try {\r\n            let optionPositions;\r\n            for (let i = 0; i < currentPositions.length; i++) {\r\n                if (currentPositions[i].color === userColor) {\r\n                    if (whiteStandby !== 0 && userColor === \"white\") {\r\n                        optionPositions = getOptionalPositions(0, isOptionalVisible.dice1, isOptionalVisible.dice2);\r\n                    }\r\n                    else if (blackStandby !== 0 && userColor === \"black\") {\r\n                        optionPositions = getOptionalPositions(25, isOptionalVisible.dice1, isOptionalVisible.dice2);\r\n                    }\r\n                    else {\r\n                        optionPositions = getOptionalPositions((i + 1), isOptionalVisible.dice1, isOptionalVisible.dice2);\r\n                    }\r\n                    if (optionPositions.option4) {\r\n                        if (optionPositions.option1.isDead === false || optionPositions.option2.isDead === false || optionPositions.option3.isDead === false || optionPositions.option4.isDead === false) {\r\n                            return true;\r\n                        }\r\n                    } else if (optionPositions.option1.isDead === false || optionPositions.option2.isDead === false || optionPositions.option3.isDead === false) {\r\n                        return true;\r\n                    }\r\n\r\n                }\r\n            };\r\n            return false;\r\n        } catch (error) {\r\n            handleError(error);\r\n            return false;\r\n        }\r\n    }\r\n    //finishes user turn and moves the next user\r\n    const finishTurn = () => {\r\n        try {\r\n            setTurnsUsed(0);\r\n            let currentUser = getCurrentUser();\r\n            const boardDataToSend = {\r\n                positions: currentPositions,\r\n                whiteOut: whiteOut,\r\n                blackOut: blackOut,\r\n                whiteStandby: whiteStandby,\r\n                blackStandby: blackStandby\r\n            }\r\n            socket.emit(\"sendBoard\", { board: boardDataToSend, senderUsername: currentUser });\r\n            socket.emit(\"finishTurn\", { username: currentUser, colorFinished: userColor })\r\n        } catch (error) {\r\n            handleError(error);\r\n        }\r\n    }\r\n\r\n    const checkAndHandleUserWin = () => {\r\n        try {\r\n            if (whiteOut === 15) { props.setGameAlertDialogType(\"whiteWin\"); }\r\n\r\n            if (blackOut === 15) { props.setGameAlertDialogType(\"blackWin\"); }\r\n        } catch (error) {\r\n            handleError(error);\r\n        }\r\n\r\n    }\r\n    //compares pieces by their position on the board\r\n    const comparePieces = (a: any, b: any) => {\r\n        if (a.props.color === \"white\") {\r\n            return b.props.position - a.props.position;\r\n        }\r\n        return a.props.position - b.props.position;\r\n    }\r\n    //handles the optional positions when clicking on a piece\r\n    useEffect(() => {\r\n        try {\r\n            if (isOptionalVisible !== null) {\r\n                let optionPositions;\r\n                if (whiteStandby !== 0 && userColor === \"white\") {\r\n                    optionPositions = getOptionalPositions(0, isOptionalVisible.dice1, isOptionalVisible.dice2);\r\n                }\r\n                else if (blackStandby !== 0 && userColor === \"black\") {\r\n                    optionPositions = getOptionalPositions(25, isOptionalVisible.dice1, isOptionalVisible.dice2);\r\n                }\r\n                else {\r\n                    if (currentPositions[isOptionalVisible.position - 1].piecesCount > 0) {\r\n                        optionPositions = getOptionalPositions(isOptionalVisible.position, isOptionalVisible.dice1, isOptionalVisible.dice2);\r\n                    } else {\r\n                        optionPositions = null;\r\n                    }\r\n                }\r\n                if (optionPositions) {\r\n                    let optionals = [\r\n                        <BoardPiece {...optionPositions.option1} keyValue={10007} />,\r\n                        <BoardPiece {...optionPositions.option2} keyValue={10008} />,\r\n                        <BoardPiece {...optionPositions.option3} keyValue={10009} />\r\n                    ]\r\n                    if (optionPositions.option4) {\r\n                        optionals.push(<BoardPiece {...optionPositions.option4} keyValue={10011} />)\r\n                        for (let index = 0; index < turnsUsed; index++) {\r\n                            optionals.pop();\r\n                        }\r\n                        props.setNumTurnsLeft(4 - turnsUsed);\r\n\r\n                    } else {\r\n                        props.setNumTurnsLeft(2)\r\n                        if (turnsUsed === 1) {\r\n                            optionals.splice(0, 1);\r\n                            optionals.splice(1, 1);\r\n                            props.setNumTurnsLeft(1)\r\n                        }\r\n                        else if (turnsUsed === 2) {\r\n                            optionals.splice(1, 1);\r\n                            optionals.splice(1, 1);\r\n                            props.setNumTurnsLeft(1)\r\n                        }\r\n                        else if (turnsUsed > 2) {\r\n                            optionals = [];\r\n                            props.setNumTurnsLeft(0)\r\n                        }\r\n                    }\r\n                    optionals.sort(comparePieces);\r\n                    setOptionPieces([...optionals]);\r\n                }\r\n                else {\r\n                    setOptionPieces([]);\r\n                }\r\n                if (!isOptionalMovesPossible()) {\r\n                    props.setGameMessage(\"No possible moves turn is over\");\r\n                    props.setNumTurnsLeft(0);\r\n                    setTimeout(() => {\r\n                        finishTurn();\r\n                        props.setGameMessage(\"\");\r\n                    }, 5000);\r\n                }\r\n            }\r\n            else {\r\n                setOptionPieces([]);\r\n            }\r\n        } catch (error) {\r\n            handleError(error);\r\n        }\r\n    }, [isOptionalVisible, turnsUsed])\r\n\r\n    //checks if turn is finished\r\n    useEffect(() => {\r\n        try {\r\n            if (isOptionalVisible) {\r\n                if (isOptionalVisible.dice1 === isOptionalVisible.dice2 && turnsUsed === 4) {\r\n                    finishTurn();\r\n                } else if (turnsUsed > 2&&isOptionalVisible.dice1 !== isOptionalVisible.dice2) {\r\n                    finishTurn();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            handleError(error);\r\n        }\r\n    }, [turnsUsed])\r\n\r\n    //set the pieces shown when eaten\r\n    useEffect(() => {\r\n        try {\r\n            let standbyPiecesToShow = [\r\n                <BoardPiece color=\"white\" position={26} row={100} onClick={null} isOptional={false} isDead={whiteStandby === 0} keyValue={10001}><span>{whiteStandby}</span></BoardPiece>,\r\n                <BoardPiece color=\"black\" position={26} row={101} onClick={null} isOptional={false} isDead={blackStandby === 0} keyValue={10002}><span>{blackStandby}</span></BoardPiece>,\r\n            ]\r\n            setStandbyPieces(standbyPiecesToShow);\r\n        } catch (error) {\r\n            handleError(error);\r\n        }\r\n    }, [blackStandby, whiteStandby])\r\n\r\n    //shows the pieces when taken out\r\n    useEffect(() => {\r\n        try {\r\n            let outPiecesToShow = [\r\n                <BoardPiece color=\"white\" position={26} row={2} onClick={null} isOptional={false} isDead={whiteOut === 0} keyValue={10003}><span>{whiteOut}</span></BoardPiece>,\r\n                <BoardPiece color=\"black\" position={0} row={2} onClick={null} isOptional={false} isDead={blackOut === 0} keyValue={10004}><span>{blackOut}</span></BoardPiece>,\r\n            ]\r\n            setOutPieces(outPiecesToShow);\r\n            checkAndHandleUserWin();\r\n        } catch (err) {\r\n            handleError(err);\r\n        }\r\n    }, [blackOut, whiteOut])\r\n\r\n    //socket handling\r\n    useEffect(() => {\r\n        try {\r\n            const socketGet = async () => {\r\n                await socket.on(\"getBoard\", (board: any) => {\r\n                    setCurrentPositions(board.positions);\r\n                    setBlackOut(board.blackOut);\r\n                    setWhiteOut(board.whiteOut);\r\n                    setWhiteStandby(board.whiteStandby);\r\n                    setBlackStandby(board.blackStandby);\r\n                })\r\n            }\r\n            socketGet();\r\n        } catch (err) {\r\n            handleError(err);\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            {currentPositions.map((object, i) => mapPositions(object, i))}\r\n            {props.isTurn ? optionPieces : <></>}\r\n            {standbyPieces}\r\n            {outPieces}\r\n        </>\r\n    )\r\n}\r\nexport default BoardPieces;\r\n\r\nfunction setNewPosition(newPosition: number, setWhiteOut: any, setBlackOut: any, currentPositions: IPosition[], color: String, setWhiteStandby: any, setBlackStandby: any, setCurrentPositions: any) {\r\n    const positions = currentPositions;\r\n    if (newPosition > 24) {\r\n        setWhiteOut((prevState: number) => prevState + 1);\r\n    }\r\n    else if (newPosition < 1) {\r\n        setBlackOut((prevState: number) => prevState + 1);\r\n    }\r\n    else if (positions[newPosition - 1].color !== color && positions[newPosition - 1].color !== \"\") {\r\n        if (positions[newPosition - 1].color === \"white\")\r\n            setWhiteStandby((prevState: number) => prevState + 1);\r\n        else if (positions[newPosition - 1].color === \"black\")\r\n            setBlackStandby((prevState: number) => prevState + 1)\r\n        positions[newPosition - 1].color = color;\r\n    }\r\n    else {\r\n        positions[newPosition - 1].piecesCount += 1;\r\n        positions[newPosition - 1].color = color;\r\n    }\r\n    setCurrentPositions(...[positions]);\r\n}\r\n\r\nfunction changeOldPosition(currentPositions: IPosition[], oldPosition: number, setWhiteStandby: any, setBlackStandby: any, whiteStandby: any, blackStandby: any, setCurrentPositions: any) {\r\n    const positions = currentPositions;\r\n    if (oldPosition === 0) {\r\n        setWhiteStandby(whiteStandby - 1)\r\n    }\r\n    else if (oldPosition === 25) {\r\n        setBlackStandby(blackStandby - 1)\r\n    } else {\r\n        positions[oldPosition - 1].piecesCount = positions[oldPosition - 1].piecesCount - 1;\r\n        if (positions[oldPosition - 1].piecesCount === 0) {\r\n            positions[oldPosition - 1].color = \"\";\r\n        }\r\n        setCurrentPositions(...[positions]);\r\n    }\r\n}\r\n","import React,{useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ninterface IGameDialogProps{\r\n    handleClose: any;\r\n    open:any;\r\n    gameAlertDialogType:String;\r\n}\r\n\r\nconst GameAlertDialog = (props:IGameDialogProps) =>{\r\n\r\n  const [titleText,setTitleText] = useState(\"\");\r\n  const [bodyText,setBodyText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    switch(props.gameAlertDialogType){\r\n      case \"userLeft\": {\r\n        setTitleText(\"You win, opponent left!\");\r\n        setBodyText(\"opponent Left the game and you won! Congratulations!\");\r\n        break;\r\n      } \r\n      case \"whiteWin\":{\r\n        setTitleText(\"White won Good Game!\");\r\n        setBodyText(\"congratulations for finishing the game hail the white pieces!\");\r\n        break;\r\n      }\r\n      case \"blackWin\":{\r\n        setTitleText(\"Black won Good Game!\");\r\n        setBodyText(\"congratulations for finishing the game hail the black pieces!\");\r\n        break;\r\n    }\r\n  }\r\n  },[props.gameAlertDialogType])\r\n\r\n    return (\r\n        <>\r\n        <Dialog\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{titleText}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {bodyText}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        </>\r\n    )\r\n}\r\nexport default GameAlertDialog;","import React, { useState, useContext, useEffect } from 'react';\r\nimport './Board.scss';\r\nimport ModalPopup from '../modal/ModalPopup';\r\nimport BoardPieces from './board-pieces/BoardPieces';\r\nimport { Close, Games } from '@material-ui/icons';\r\nimport { Button, CircularProgress, Badge } from '@material-ui/core';\r\nimport ReactDice from 'react-dice-complete'\r\nimport 'react-dice-complete/dist/react-dice-complete.css'\r\nimport { SocketContext } from '../../context/socketContext'\r\nimport GameAlertDialog from './dialogs/GameAlertDialog'\r\nimport { handleError } from '../../services/errorHandling.service';\r\n\r\nexport interface IIsOptionVisible {\r\n    dice1: number;\r\n    dice2: number;\r\n    position: number;\r\n\r\n}\r\n\r\ninterface IBoardProps {\r\n    handleClose: any;\r\n    open: any;\r\n}\r\n\r\nconst Board = (props: IBoardProps) => {\r\n    const socket = useContext(SocketContext)\r\n    let reactDice1: any;\r\n    let reactDice2: any;\r\n    const [userColor, setUserColor] = useState<String>(\"\");\r\n    //optional moves\r\n    const [isOptionalVisible, setIsOptionalVisible] = useState<null | IIsOptionVisible>(null);\r\n    const [isGameStarted, setIsGameStarted] = useState(false);\r\n    //dialogs\r\n    const [openGameAlertDialog, setOpenGameAlertDialog] = useState(false);\r\n    const [gameAlertDialogType, setGameAlertDialogType] = useState(\"\")\r\n    const [isTurn, setIsTurn] = useState(false);\r\n    const [isDiceRolled, setIsDiceRolled] = useState(false);\r\n    const [numTurnsLeft, setNumTurnsLeft] = useState(0);\r\n    const [gameMessage, setGameMessage] = useState(\"\");\r\n    const [isRollDisabled, setIsRollDisabled] = useState(true);\r\n    const [currentUserColor, setCurrentUserColor] = useState(\"\");\r\n\r\n    const handleGameAlertDialogClose = () => {\r\n        try {\r\n            setOpenGameAlertDialog(false);\r\n            props.handleClose();\r\n        } catch (err) {\r\n            handleError(err)\r\n        }\r\n    }\r\n    const rollDoneCallback = (num: number) => {\r\n\r\n    }\r\n    const rollAll = () => {\r\n        try {\r\n            reactDice1.rollAll();\r\n            reactDice2.rollAll();\r\n            setIsDiceRolled(true);\r\n            setIsRollDisabled(true);\r\n        } catch (err) {\r\n            handleError(err);\r\n        }\r\n    }\r\n    //Show optional moves or not\r\n    const showOptions = (position: number) => {\r\n        try {\r\n            if (isTurn && isDiceRolled) {\r\n                setIsOptionalVisible({ ...{ dice1: reactDice1.state.totalValue, dice2: reactDice2.state.totalValue, position: position } });\r\n            } else {\r\n                setIsOptionalVisible(null);\r\n            }\r\n        } catch (error) {\r\n            handleError(error);\r\n        }\r\n    }\r\n    //set who turn it is\r\n    const setTurn = (color: String, assignedUserColor: String) => {\r\n        try{\r\n        if (assignedUserColor === color) {\r\n            setIsTurn(true);\r\n            setIsRollDisabled(false);\r\n        }\r\n        else {\r\n            setIsTurn(false);\r\n            setIsRollDisabled(true);\r\n        }\r\n    }catch(error){\r\n        handleError(error);\r\n    }\r\n    }\r\n\r\n    //socket handler\r\n    useEffect(() => {\r\n        try {\r\n            const socketGet = async () => {\r\n                await socket.on(\"startGame\", (res: any) => {\r\n                    setIsDiceRolled(false);\r\n                    setUserColor(res.color);\r\n                    setCurrentUserColor(res.color);\r\n                    setTurn(res.startColor, res.color)\r\n                    setIsGameStarted(true);\r\n                })\r\n\r\n                await socket.on(\"userLeftGame\", (username: any) => {\r\n                    setOpenGameAlertDialog(true);\r\n                    setGameAlertDialogType(\"userLeft\");\r\n                })\r\n\r\n                await socket.on(\"changeTurn\", (currentTurnColor: any) => {\r\n                    setIsDiceRolled(false);\r\n                    setTurn(currentTurnColor, currentUserColor);\r\n                    setIsOptionalVisible(null);\r\n\r\n                })\r\n            }\r\n            socketGet();\r\n        } catch (err) {\r\n            handleError(err);\r\n\r\n        }\r\n    }, [currentUserColor])\r\n\r\n    //alert dialog opener\r\n    useEffect(() => {\r\n        try{\r\n        if (gameAlertDialogType !== \"\") {\r\n            setOpenGameAlertDialog(true);\r\n        }\r\n    }catch (error) {\r\n        handleError(error);\r\n    }\r\n    }, [gameAlertDialogType])\r\n\r\n\r\n    return (\r\n        <>\r\n            <ModalPopup open={props.open}>\r\n                <div className=\"frame\">\r\n                    {!isGameStarted ?\r\n                        <>\r\n                            <div className=\"leftContainer\">\r\n                                <Button onClick={props.handleClose}><Close className=\"fillIcon\" /></Button>\r\n                            </div>\r\n                            <div className=\"loading\">\r\n                                <CircularProgress />\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <div className=\"topContainer\">\r\n                                <div className=\"leftContainer\">\r\n                                    <Button onClick={props.handleClose}><Close className=\"fillIcon\" /></Button>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={rollAll} disabled={isRollDisabled}>Roll Dice</Button>\r\n                                </div>\r\n                                {isTurn ?\r\n                                    <div className=\"rightContainer\">\r\n                                        <span className=\"message\">{gameMessage}</span>\r\n                                        <Badge badgeContent={numTurnsLeft} color=\"primary\" className=\"turnsLeft\">\r\n                                            <Games />\r\n                                        </Badge>\r\n\r\n                                    </div>\r\n                                    : <></>\r\n                                }\r\n                            </div>\r\n                            <div className=\"centerContainer\">\r\n                                <ReactDice\r\n                                    numDice={1}\r\n                                    rollDone={rollDoneCallback}\r\n                                    ref={(dice: any) => { reactDice1 = dice }}\r\n                                    disableIndividual={true}\r\n                                    dieSize={30}\r\n                                    faceColor=\"#000000\"\r\n                                    dotColor=\"#fffff\"\r\n                                />\r\n                                <ReactDice\r\n                                    numDice={1}\r\n                                    rollDone={rollDoneCallback}\r\n                                    ref={(dice: any) => { reactDice2 = dice }}\r\n                                    disableIndividual={true}\r\n                                    dieSize={30}\r\n                                    faceColor=\"#000000\"\r\n                                    dotColor=\"#fffff\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"board\">\r\n                                <div className=\"left-bin\">\r\n                                    <div className=\"top-row\">\r\n                                        <div className=\"arrow-down odd\"></div>\r\n                                        <div className=\"arrow-down even\"></div>\r\n                                        <div className=\"arrow-down odd\"></div>\r\n                                        <div className=\"arrow-down even\"></div>\r\n                                        <div className=\"arrow-down odd\"></div>\r\n                                        <div className=\"arrow-down even\"></div>\r\n                                    </div>\r\n\r\n                                    <div className=\"bottom-row\">\r\n                                        <div className=\"arrow-up odd\"></div>\r\n                                        <div className=\"arrow-up even\"></div>\r\n                                        <div className=\"arrow-up odd\"></div>\r\n                                        <div className=\"arrow-up even\"></div>\r\n                                        <div className=\"arrow-up odd\"></div>\r\n                                        <div className=\"arrow-up even\"></div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"middle-bar\"></div>\r\n\r\n                                <div className=\"right-bin\">\r\n                                    <div className=\"top-row\">\r\n                                        <div className=\"arrow-down odd\"></div>\r\n                                        <div className=\"arrow-down even\"></div>\r\n                                        <div className=\"arrow-down odd\"></div>\r\n                                        <div className=\"arrow-down even\"></div>\r\n                                        <div className=\"arrow-down odd\"></div>\r\n                                        <div className=\"arrow-down even\"></div>\r\n                                    </div>\r\n\r\n                                    <div className=\"bottom-row\">\r\n                                        <div className=\"arrow-up odd\"></div>\r\n                                        <div className=\"arrow-up even\"></div>\r\n                                        <div className=\"arrow-up odd\"></div>\r\n                                        <div className=\"arrow-up even\"></div>\r\n                                        <div className=\"arrow-up odd\"></div>\r\n                                        <div className=\"arrow-up even\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <BoardPieces showOptions={showOptions} userColor={userColor} isOptionalVisible={isOptionalVisible} setGameMessage={setGameMessage} setNumTurnsLeft={setNumTurnsLeft} isTurn={isTurn} setGameAlertDialogType={setGameAlertDialogType} />\r\n\r\n\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </ModalPopup>\r\n            <GameAlertDialog open={openGameAlertDialog} handleClose={handleGameAlertDialogClose} gameAlertDialogType={gameAlertDialogType} />\r\n        </>\r\n    );\r\n}\r\nexport default Board;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ninterface IGameDialogProps {\r\n  handleClose: any;\r\n  open: any;\r\n  player: String;\r\n}\r\n\r\nconst GameDialog = (props: IGameDialogProps) => {\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={() => { props.handleClose(\"disagree\") }}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Play backgammon ?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {props.player} Wants to play with you do you want to join him on the greatest backgammon game?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => { props.handleClose(\"disagree\") }} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={() => { props.handleClose(\"agree\") }} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\nexport default GameDialog;","import React, { useState, useEffect } from 'react';\r\nimport Snackbar, { SnackbarOrigin } from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport {handleError} from '../../services/errorHandling.service'\r\ninterface IMessageNotificationProps {\r\n    notificationOpen: boolean;\r\n    onNotificationClose: any;\r\n    sender: String;\r\n    text: String;\r\n}\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst MessageNotification = (props: IMessageNotificationProps) => {\r\n\r\n    const { notificationOpen, onNotificationClose, sender, text } = props;\r\n\r\n    const [notificationMessage, setNotificationMessage] = useState(\"\");\r\n    const changeMessage = () => {\r\n        let message = `${sender}: ${text.slice(0, 15)}...`\r\n        setNotificationMessage(message);\r\n    }\r\n    useEffect(() => {\r\n        changeMessage();\r\n    }, [text, sender])\r\n\r\n    useEffect(() => {        \r\n        if(notificationOpen){\r\n            let audio = new Audio(\"https://fsb.zobj.net/download/b-2Zm5rq55wKFJGjC-Rbqu5mgoyjS5LllDNDILAwKcmkq0XdzzUnx1j1MWEFKtsEOzsviSb6wvexZ42e3FAI5fqWFUMHQIkZeNDkyWhMTqKgZM_yxPlehPZYvZwA/?a=&c=72&f=notification.mp3&special=1628942422-aP%2FPZ%2FAFIgkIqq2Nh8xO4zgLUQozZ5ZaTCJ0LufZoRE%3D\");\r\n             audio.load();\r\n            audio.muted=false;\r\n             audio.play()\r\n             .then(() => {\r\n               // Audio is playing.\r\n             })\r\n             .catch(error => {\r\n               handleError(error);               \r\n             });\r\n        }\r\n    },[notificationOpen])\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            open={notificationOpen}\r\n            onClose={onNotificationClose}\r\n            key={\"topcenter\"}\r\n            autoHideDuration={3000}\r\n        >\r\n            <Alert onClose={onNotificationClose} severity=\"success\">\r\n                {notificationMessage}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n\r\n}\r\nexport default MessageNotification;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport GridColDefs from './GridColDef'\r\nimport ContactDialog from '../../components/contact-actions/ContactDialog';\r\nimport './ContactScreenStyle.scss';\r\nimport Conversation from '../../components/conversation/Conversation';\r\nimport { SocketContext } from '../../context/socketContext';\r\nimport { getCurrentUser } from '../../services/auth.service';\r\nimport useOpenConversation from '../../hooks/useOpenConversation';\r\nimport useOpenBoard from '../../hooks/useOpenBoard';\r\nimport Board from '../../components/board/Board';\r\nimport GameDialog from '../../components/game-dialog/GameDialog';\r\nimport MessageNotification from '../../components/message-notification/MessageNotification';\r\nimport {handleError} from '../../services/errorHandling.service';\r\n\r\nconst ContactScreen = () => {\r\n    const socket = useContext(SocketContext);\r\n    const [selectedUsername, setSelectedUsername] = useState<String>(\"\");\r\n    const [isSelecterUserConnected,setIsSelecterUserConnected] = useState(true)\r\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\r\n    const [onlineUsers, setOnlineUsers] = useState<Array<any>>([]);\r\n    const [offlineUsers, setOfflineUsers] = useState<Array<any>>([]);\r\n    const { openConversation, handleConversationOpen,handleConversationClose} = useOpenConversation();\r\n    const [openGameDialog,setOpenGameDialog] = useState(false);\r\n    const [playerAsking,setPlayerAsking] = useState(\"\");\r\n    const {openBoard,handleBoardOpen,handleBoardClose} = useOpenBoard();\r\n    const [openMessageNotification,setOpenMessageNotification] = useState(false);\r\n    const [senderName,setSenderName] = useState(\"\");\r\n    const [messageText,setMessageText] = useState(\"\");\r\n    const handleDialogClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n\r\n    const messageNotificationClose = (event?: React.SyntheticEvent, reason?: string)=>{\r\n        if (reason === 'clickaway') {\r\n            return;\r\n          }\r\n          setOpenMessageNotification(false);\r\n          setSenderName(\"\");\r\n          setMessageText(\"\");\r\n    }\r\n    const handleDialogClose = (value: string) => {\r\n        try{\r\n        setAnchorEl(null);\r\n        if(value===\"sendMessage\"){            \r\n            handleConversationOpen();\r\n        }else if(value===\"play\"){\r\n            handleBoardOpen(getCurrentUser(),selectedUsername);\r\n        }\r\n    }catch (err) {\r\n        handleError(err)\r\n    }\r\n    };\r\n    const handleRowSelection = (e: any) => {\r\n        try{\r\n        setSelectedUsername(e.row.username);\r\n        setIsSelecterUserConnected(e.row.status===\"online\");\r\n        }catch(error){\r\n            handleError(error)\r\n        }\r\n    }\r\n    const handleGameDialogClose = (status:any)=>{\r\n        try{\r\n        setOpenGameDialog(false);\r\n        let senderUsername=getCurrentUser();\r\n        if(status!==\"agree\"){\r\n            socket.emit(\"leaveGame\",{ senderUsername, selectedUsername});\r\n        }\r\n        else{            \r\n            handleBoardOpen(senderUsername,selectedUsername);\r\n        }\r\n    }catch (err) {\r\n        handleError(err)\r\n    }\r\n    }\r\n    const dialogOpen = Boolean(anchorEl);\r\n    const id = dialogOpen ? 'simple-popover' : undefined;\r\n    const columns = GridColDefs({handleClick:handleDialogClick});\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const socketGet = async () =>{\r\n            await socket.on(\"getUsers\", (users: any) => {     \r\n                const onlineUsers = users.onlines.filter((user:any)=>{return user.username!==getCurrentUser()})         \r\n                const userRows = onlineUsers.map((user: any,index:any) => ({id:index, username: user.username, status: \"online\" }))\r\n                const offlineUserRows = users.offlines.map((user: any,index:any) => ({id:index, username: user.username, status: \"offline\" }))\r\n                setOnlineUsers(userRows);           \r\n                setOfflineUsers(offlineUserRows);\r\n            })\r\n            await socket.on(\"askToJoinGame\",(username:any)=>{                \r\n                setPlayerAsking(username);\r\n                setSelectedUsername(username);\r\n                setOpenGameDialog(true);\r\n            })\r\n\r\n            await socket.on(\"getNewMessage\",(messsageData:any)=>{\r\n                setMessageText(messsageData.text);\r\n                setSenderName(messsageData.sender);\r\n                setOpenMessageNotification(true);                \r\n            })\r\n        }\r\n        socketGet();\r\n        } catch (err) {\r\n            handleError(err)\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const socketSend = async () =>{\r\n                await socket.emit(\"ask_for_users\", getCurrentUser());\r\n            }\r\n            socketSend();\r\n        }\r\n        catch (err) {\r\n            handleError(err)\r\n        }\r\n    }, []);\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <DataGrid\r\n                className=\"paper\"\r\n                rows={onlineUsers}\r\n                columns={columns.columns}\r\n                pageSize={5}\r\n                rowsPerPageOptions={[5,4,3]}\r\n                autoHeight\r\n                disableExtendRowFullWidth={true}\r\n                onRowClick={handleRowSelection}\r\n            />\r\n            <DataGrid\r\n                className=\"paper\"\r\n                rows={offlineUsers}\r\n                columns={columns.columns}\r\n                pageSize={5}\r\n                rowsPerPageOptions={[5,4,3]}\r\n                autoHeight\r\n                disableExtendRowFullWidth={true}\r\n                onRowClick={handleRowSelection}\r\n            />\r\n            <ContactDialog open={dialogOpen} handleClose={handleDialogClose} id={id} anchorEl={anchorEl} isSelecterUserConnected={isSelecterUserConnected}/>\r\n            <Conversation open={openConversation} handleClose={handleConversationClose} senderUsername={getCurrentUser()} recieverUsername={selectedUsername}/>\r\n            <Board open={openBoard} handleClose={handleBoardClose}/>\r\n            <GameDialog open={openGameDialog} handleClose={handleGameDialogClose} player={playerAsking} />\r\n            <MessageNotification notificationOpen={openMessageNotification} sender={senderName} text={messageText} onNotificationClose={messageNotificationClose}/>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default ContactScreen;","import './WebsiteDown.scss';\r\nconst WebsiteDown = () => {\r\n    return (\r\n        <div className=\"vc-container\">\r\n            <div className=\"vc-content\">\r\n                <h1 className=\"vc-heading\">500</h1>\r\n                <p className=\"vc-sub-heading\">Internal Server <span className=\"blink-infinite\">Error</span></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default WebsiteDown;","import React, { useState, useEffect, useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useStyles from './PageLayoutStyle';\r\nimport Header from '../header/Header';\r\nimport SignUp from '../../views/sign-up/SignUp';\r\nimport Login from '../../views/log-in/Login';\r\nimport Logout from '../log-out/Logout';\r\nimport ContactScreen from '../../views/contact-screen/ContactScreen';\r\nimport WebsiteDown from '../../views/website-down/WebsiteDown';\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\r\nimport { isAuthorized } from '../../services/auth.service'\r\nimport { SocketContext } from '../../context/socketContext'\r\nimport { handleError } from '../../services/errorHandling.service'\r\n\r\nexport default function PageLayout() {\r\n  const [currentPage, setCurrentPage] = useState(\"\");\r\n  const socket = useContext(SocketContext);\r\n  const theme = useTheme();\r\n  const classes = useStyles(theme);\r\n  const [open, setOpen] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState<Boolean>(false);\r\n  const [isServerOnline,setIsServerOnline] = useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {      \r\n      const getAuth = async () => {\r\n        setIsLoggedIn(await isAuthorized());\r\n      }\r\n      getAuth();\r\n    } catch (err) {\r\n      handleError(err);\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (isLoggedIn) {\r\n        socket.emit(\"user_online\", localStorage.getItem(\"username\"));\r\n        setCurrentPage(\"/contact\");\r\n      }\r\n      else {\r\n        setCurrentPage(\"/signin\");\r\n      }\r\n    } catch (err) {\r\n      handleError(err);\r\n    }\r\n  }, [isLoggedIn])\r\n\r\n  useEffect(()=>{\r\n    setIsServerOnline(socket.connected);\r\n    socket.on(\"connect\",()=>{\r\n      setIsServerOnline(socket.connected);      \r\n    })\r\n  },[socket])\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <BrowserRouter>\r\n        <Header handleDrawerOpen={handleDrawerOpen} open={open} handleDrawerClose={handleDrawerClose} isLoggedIn={isLoggedIn}></Header>\r\n\r\n        <main\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          {isServerOnline?<>\r\n          <Route path=\"/signin\" component={() => isLoggedIn ? <ContactScreen /> : <Login setIsLoggedIn={setIsLoggedIn} />} />\r\n          <Route path=\"/register\" component={isLoggedIn ? ContactScreen : SignUp} />\r\n          <Route path=\"/contact\" component={ContactScreen} />\r\n          <Route path=\"/logout\" component={() => <Logout setIsLoggedIn={setIsLoggedIn} />} />\r\n          <Route path=\"**\" render={() => {\r\n            return (<Redirect to={currentPage} />)\r\n          }} />\r\n          <Route exact path=\"/\" component={() =>\r\n            currentPage === \"/signin\" ? <Login setIsLoggedIn={setIsLoggedIn} /> : <ContactScreen />\r\n          } />\r\n          </>:<WebsiteDown/>}\r\n        </main>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport {SocketContext, socket} from '../src/context/socketContext';\nimport './App.scss';\nimport PageLayout from './components/page-layout/PageLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SocketContext.Provider value={socket}>\n      <PageLayout></PageLayout>\n      </SocketContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}